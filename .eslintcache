[{"C:\\Users\\Harsha Bhatta\\Desktop\\Learning\\reactJS\\expense_tracker\\src\\index.js":"1","C:\\Users\\Harsha Bhatta\\Desktop\\Learning\\reactJS\\expense_tracker\\src\\App.js":"2","C:\\Users\\Harsha Bhatta\\Desktop\\Learning\\reactJS\\expense_tracker\\src\\components\\Details\\Details.js":"3","C:\\Users\\Harsha Bhatta\\Desktop\\Learning\\reactJS\\expense_tracker\\src\\components\\Details\\DetailsStyles.js":"4","C:\\Users\\Harsha Bhatta\\Desktop\\Learning\\reactJS\\expense_tracker\\src\\AppStyles.js":"5","C:\\Users\\Harsha Bhatta\\Desktop\\Learning\\reactJS\\expense_tracker\\src\\components\\Main\\Main.js":"6","C:\\Users\\Harsha Bhatta\\Desktop\\Learning\\reactJS\\expense_tracker\\src\\components\\Main\\MainStyles.js":"7","C:\\Users\\Harsha Bhatta\\Desktop\\Learning\\reactJS\\expense_tracker\\src\\components\\Main\\Form\\Form.js":"8","C:\\Users\\Harsha Bhatta\\Desktop\\Learning\\reactJS\\expense_tracker\\src\\components\\Main\\Form\\FormStyles.js":"9","C:\\Users\\Harsha Bhatta\\Desktop\\Learning\\reactJS\\expense_tracker\\src\\components\\Main\\DetailsList\\DetailsList.js":"10","C:\\Users\\Harsha Bhatta\\Desktop\\Learning\\reactJS\\expense_tracker\\src\\components\\Main\\DetailsList\\DetailsListStyles.js":"11","C:\\Users\\Harsha Bhatta\\Desktop\\Learning\\reactJS\\expense_tracker\\src\\Context\\Context.js":"12","C:\\Users\\Harsha Bhatta\\Desktop\\Learning\\reactJS\\expense_tracker\\src\\Context\\contextReducer.js":"13","C:\\Users\\Harsha Bhatta\\Desktop\\Learning\\reactJS\\expense_tracker\\src\\constants\\constants.js":"14","C:\\Users\\Harsha Bhatta\\Desktop\\Learning\\reactJS\\expense_tracker\\src\\utils\\DateFormat.js":"15","C:\\Users\\Harsha Bhatta\\Desktop\\Learning\\reactJS\\expense_tracker\\src\\customHooks\\useTransactions.js":"16"},{"size":418,"mtime":1610174310460,"results":"17","hashOfConfig":"18"},{"size":1105,"mtime":1610214342618,"results":"19","hashOfConfig":"18"},{"size":869,"mtime":1610214751238,"results":"20","hashOfConfig":"18"},{"size":271,"mtime":1609339346477,"results":"21","hashOfConfig":"18"},{"size":582,"mtime":1609339320930,"results":"22","hashOfConfig":"18"},{"size":1462,"mtime":1610215046478,"results":"23","hashOfConfig":"18"},{"size":542,"mtime":1609858087015,"results":"24","hashOfConfig":"18"},{"size":5661,"mtime":1610187017619,"results":"25","hashOfConfig":"18"},{"size":247,"mtime":1609384604836,"results":"26","hashOfConfig":"18"},{"size":1731,"mtime":1609951458253,"results":"27","hashOfConfig":"18"},{"size":416,"mtime":1609392147209,"results":"28","hashOfConfig":"18"},{"size":1045,"mtime":1610214879329,"results":"29","hashOfConfig":"18"},{"size":555,"mtime":1610213941957,"results":"30","hashOfConfig":"18"},{"size":1765,"mtime":1610032482372,"results":"31","hashOfConfig":"18"},{"size":352,"mtime":1610187072762,"results":"32","hashOfConfig":"18"},{"size":1486,"mtime":1610214851110,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"7otwrc",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Harsha Bhatta\\Desktop\\Learning\\reactJS\\expense_tracker\\src\\index.js",[],["68","69"],"C:\\Users\\Harsha Bhatta\\Desktop\\Learning\\reactJS\\expense_tracker\\src\\App.js",[],"C:\\Users\\Harsha Bhatta\\Desktop\\Learning\\reactJS\\expense_tracker\\src\\components\\Details\\Details.js",[],"C:\\Users\\Harsha Bhatta\\Desktop\\Learning\\reactJS\\expense_tracker\\src\\components\\Details\\DetailsStyles.js",[],"C:\\Users\\Harsha Bhatta\\Desktop\\Learning\\reactJS\\expense_tracker\\src\\AppStyles.js",[],"C:\\Users\\Harsha Bhatta\\Desktop\\Learning\\reactJS\\expense_tracker\\src\\components\\Main\\Main.js",[],"C:\\Users\\Harsha Bhatta\\Desktop\\Learning\\reactJS\\expense_tracker\\src\\components\\Main\\MainStyles.js",[],"C:\\Users\\Harsha Bhatta\\Desktop\\Learning\\reactJS\\expense_tracker\\src\\components\\Main\\Form\\Form.js",["70"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport {\r\n  Grid,\r\n  Button,\r\n  Select,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Input,\r\n  MenuItem,\r\n} from '@material-ui/core';\r\nimport { useSpeechContext } from '@speechly/react-client';\r\nimport { ExpenseTrackerContext } from '../../../Context/Context';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport DateFormat from '../../../utils/DateFormat';\r\nimport {\r\n  incomeCategories,\r\n  expenseCategories,\r\n} from '../../../constants/constants';\r\n\r\nimport useStyles from './FormStyles';\r\n\r\nconst initialState = {\r\n  type: '',\r\n  category: '',\r\n  amount: '',\r\n  date: DateFormat(new Date()),\r\n};\r\n\r\nconst Form = () => {\r\n  const classes = useStyles();\r\n  const { segment } = useSpeechContext();\r\n  const [formData, setformData] = useState(initialState);\r\n  const { AddTransaction } = useContext(ExpenseTrackerContext);\r\n\r\n  const requiredCategories =\r\n    formData.type === 'Income' ? incomeCategories : expenseCategories;\r\n\r\n  const CreateTransaction = () => {\r\n    if (Number.isNaN(Number(formData.amount)) || !formData.date.includes('-'))\r\n      return;\r\n    const transaction = {\r\n      ...formData,\r\n      amount: Number(formData.amount),\r\n      id: uuidv4(),\r\n    };\r\n    AddTransaction(transaction);\r\n    setformData(initialState);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (segment) {\r\n      // check the intent -> type of the speech\r\n      if (segment.intent.intent === 'add_expense') {\r\n        setformData({ ...formData, type: 'Expense' });\r\n      } else if (segment.intent.intent === 'add_income') {\r\n        setformData({ ...formData, type: 'Income' });\r\n      } else if (\r\n        segment.intent.intent === 'create_transaction' &&\r\n        segment.isFinal\r\n      ) {\r\n        CreateTransaction();\r\n      } else if (\r\n        segment.intent.intent === 'cancel_transaction' &&\r\n        segment.isFinal\r\n      ) {\r\n        setformData(initialState);\r\n      }\r\n\r\n      //check the entities of the speech (category, amount, date)\r\n      segment.entities.forEach((s) => {\r\n        let category = `${s.value.charAt(0)}${s.value.slice(1).toLowerCase()}`;\r\n        switch (s.type) {\r\n          case 'amount':\r\n            setformData({ ...formData, amount: s.value });\r\n            break;\r\n          case 'category':\r\n            if (incomeCategories.map((iC) => iC.type).includes(category))\r\n              setformData({ ...formData, type: 'Income', category });\r\n            else if (expenseCategories.map((eC) => eC.type).includes(category))\r\n              setformData({ ...formData, type: 'Expense', category });\r\n            break;\r\n          case 'date':\r\n            setformData({ ...formData, date: s.value });\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n\r\n      //create transaction once all the details are present\r\n      if (\r\n        segment.isFinal &&\r\n        formData.category &&\r\n        formData.type &&\r\n        formData.date &&\r\n        formData.amount\r\n      )\r\n        CreateTransaction();\r\n    }\r\n  }, [segment]);\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          {segment && segment.words.map((w) => w.value).join(' ')}\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <FormControl fullWidth>\r\n            <InputLabel id='type-label'>Type</InputLabel>\r\n            <Select\r\n              labelId='type-label'\r\n              id='type-select'\r\n              value={formData.type}\r\n              onChange={(e) =>\r\n                setformData({ ...formData, type: e.target.value })\r\n              }\r\n            >\r\n              <MenuItem value='Income'>Income</MenuItem>\r\n              <MenuItem value='Expense'>Expense</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <FormControl fullWidth>\r\n            <InputLabel id='category-label'>Category</InputLabel>\r\n            <Select\r\n              value={formData.category}\r\n              labelId='category-label'\r\n              id='category-select'\r\n              onChange={(e) => {\r\n                setformData({ ...formData, category: e.target.value });\r\n              }}\r\n            >\r\n              {requiredCategories.map((c) => (\r\n                <MenuItem value={c.type} key={c.type}>\r\n                  {c.type}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={6}>\r\n          <FormControl>\r\n            <InputLabel>Amount</InputLabel>\r\n            <Input\r\n              type='number'\r\n              placeholder='Amount'\r\n              value={formData.amount}\r\n              onChange={(e) => {\r\n                setformData({ ...formData, amount: e.target.value });\r\n              }}\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <FormControl>\r\n            <TextField\r\n              id='date'\r\n              label='Date'\r\n              type='date'\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              style={{ width: '90%' }}\r\n              value={formData.date}\r\n              onChange={(e) => {\r\n                setformData({ ...formData, date: DateFormat(e.target.value) });\r\n              }}\r\n            />\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n      <Button\r\n        variant='outlined'\r\n        color='primary'\r\n        className={classes.button}\r\n        fullWidth\r\n        onClick={CreateTransaction}\r\n      >\r\n        Create\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","C:\\Users\\Harsha Bhatta\\Desktop\\Learning\\reactJS\\expense_tracker\\src\\components\\Main\\Form\\FormStyles.js",[],"C:\\Users\\Harsha Bhatta\\Desktop\\Learning\\reactJS\\expense_tracker\\src\\components\\Main\\DetailsList\\DetailsList.js",[],"C:\\Users\\Harsha Bhatta\\Desktop\\Learning\\reactJS\\expense_tracker\\src\\components\\Main\\DetailsList\\DetailsListStyles.js",[],"C:\\Users\\Harsha Bhatta\\Desktop\\Learning\\reactJS\\expense_tracker\\src\\Context\\Context.js",[],"C:\\Users\\Harsha Bhatta\\Desktop\\Learning\\reactJS\\expense_tracker\\src\\Context\\contextReducer.js",[],"C:\\Users\\Harsha Bhatta\\Desktop\\Learning\\reactJS\\expense_tracker\\src\\constants\\constants.js",[],"C:\\Users\\Harsha Bhatta\\Desktop\\Learning\\reactJS\\expense_tracker\\src\\utils\\DateFormat.js",[],"C:\\Users\\Harsha Bhatta\\Desktop\\Learning\\reactJS\\expense_tracker\\src\\customHooks\\useTransactions.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":101,"column":6,"nodeType":"77","endLine":101,"endColumn":15,"suggestions":"78"},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'CreateTransaction' and 'formData'. Either include them or remove the dependency array. You can also do a functional update 'setformData(f => ...)' if you only need 'formData' in the 'setformData' call.","ArrayExpression",["81"],"no-global-assign","no-unsafe-negation",{"desc":"82","fix":"83"},"Update the dependencies array to be: [CreateTransaction, formData, segment]",{"range":"84","text":"85"},[3028,3037],"[CreateTransaction, formData, segment]"]